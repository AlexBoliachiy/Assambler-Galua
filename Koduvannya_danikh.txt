
// Кодування даних

#GF(2^13)
													
																						
DATA
const r = 27
//const pow_A = b'10011
const pow_A = 19
const pow_B = 1
const pow_T = r
const alpha = 2
const sqr_alpha = h'4
const null = 0

count_T = 2

//Array A [ pow_A ] = (  5, h'F, b'1, 0, b'111, h'3 )
Array A [ pow_A + 1 ] = (  5, 27, 1013, 13, 71, 89, 1001, 579, 789, 234, 567, 5, 7, 2, 0, 0, 0, 1, 5, 1017 )
//Array A [ pow_A + 1 ] = ( 5, 15, 1, 0, 7, 3 )
Array B [ pow_B+1  ] = (sqr_alpha, 1 )
Array C [ pow_A + r +1 ] = ( )
Array G [ r + 1 ] = ( alpha, 1 )
Array T [ pow_T + 1 ] = ( alpha, 1 )
												

CODE


MOV R0, alpha												
LOAD_CA_A CA_0, 0								

// генерування твірного многочлена
LOOP 0, r - 1
	MOV R2, null
	LOAD_CA_A CA_1, 0
	
	// переписуємо елементи масиву G у масив T, а масив G заповнюємо нулями
	LOOP 1, count_T														
		MOV_ARRAY R1, G[CA_1]
		MOV_ARRAY T [CA_1], R1
		MOV_ARRAY G [CA_1], R2
		INC_DEC CA_1, 0
	END_LOOP 1
	
	// множимо поточний твірний многочлен на чергову дужку (х - alpha^i)
	LOAD_CA_A CA_2, 0
	LOOP 1, pow_B + 1
		LOAD_CA_A CA_1, 0
		LOAD_CA CA_3, CA_2
		MOV_ARRAY R2, B[CA_2]
		
		LOOP 2, count_T
			MOV_ARRAY R1, T[CA_1]
			MOV_ARRAY R3, G[CA_3]
			MULT R1, R2
			ADD R3, R1
			MOV_ARRAY G[CA_3], R3
			INC_DEC CA_1, 0											
			INC_DEC CA_3, 0			
		END_LOOP 2
		
		INC_DEC CA_2, 0
	END_LOOP 1
	
	// множимо старший коефіцієнт масиву В на alpha, тим самим збільшуючи показник степеня alpha на 1
	MOV_ARRAY R1, B[CA_0]
	MULT R1, R0
	MOV_ARRAY B[CA_0], R1
	
	// збільшуємо на 1 кількість задіяних елементів масиву T
	MOV_A R1, count_T
	INC_DEC R1, 0
	MOV_A count_T, R1
END_LOOP 0

// множення твірного многочлена G на многочлен С, який необхідно закодувати
LOAD_CA_A CA_2, h'0
LOOP 0, pow_A+1
	LOAD_CA_A CA_1, b'0
	LOAD_CA CA_3, CA_2
	MOV_ARRAY R1, A[CA_2	]
	
	LOOP 1, count_T
		MOV_ARRAY R0, G[CA_1 + 0]
		MOV_ARRAY R2, C[CA_3]
		MULT R0, R1
		ADD R2, R0
		MOV_ARRAY C[CA_3],R2
		INC_DEC CA_1, 0
		INC_DEC CA_3,0
	END_LOOP 1
	
	INC_DEC CA_2, 0	
END_LOOP 0

LOAD_CA_A CA_0, 0
LOOP 0, pow_A + r + 1
	OUT C[CA_0]
	INC_DEC CA_0, 0	
END_LOOP 0




