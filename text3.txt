DATA
const m = 4
const r = 7
const pow_B = 1
const pow_T = r 
const alpha = 2 
const sqr_alpha = 4 
const null = 0 
const pow_A = 5 
count_T = 2
Array G [r:0] = (alpha, 1, 0, 0, 0, 0, 0, 0)
Array T [pow_T:0] = (alpha, 1, 0, 0, 0, 0, 0, 0)
Array B [pow_B:0] = (sqr_alpha, 1) Array A [pow_A:0] = (5, 15, 1, 0, 7, 3)
Array C [pow_A + r : 0] = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
CODE
MOV_A	R0, alpha					
LOAD_CA_A	CA_0, 9b'000000000	
LOOP	0, r-1						
	LOAD_CA_A	CA_2, 9b'000000000
	LOOP		1, pow_B + 1		
			LOAD_CA_A	CA_1, 9b'000000000
			LOAD_CA	CA_3, CA_2
			MOV_ARRAY	R2, B [CA_2 + 0]
			LOOP	2, count_T	
				MOV_ARRAY	R1, T [CA_1 + 0]
				MOV_ARRAY	R3, G [CA_3 + 0]
				MULT	R1, R2	
				ADD	R3, R1	
				MOV_ARRAY	G [CA_3 + 0], R3
				INC_DEC	CA_1, 0
				INC_DEC	CA_3, 0
			END_LOOP		2		
			INC_DEC_CA	CA_2, 0	
	END_LOOP	1				
	MOV_ARRAY	R1, B [CA_0 + 0]
	MULT		R1, R0				
	MOV_ARRAY	B [CA_0 + 0], R1
	MOV_A	R1, count_T		
	INC_DEC  R1, 0				
	MOV_A	count_T, R1		
	MOV_A	R2, null				
	LOAD_CA_A	CA_1, 9bТ000000000
	LOOP		1, count_T			
			MOV_ARRAY	R1, G [CA_1 + 0]
			MOV_ARRAY	T [CA_1 + 0], R1
			MOV_ARRAY	G [CA_1 + 0], R2
			INC_DEC	CA_1, 0		
	END_LOOP	1				
END_LOOP	0						
LOAD_CA_A	CA_2, 9b'000000000 // множенн€ тв≥рного многочлена на многочлен даних
LOOP	0, pow_A + 1		
	LOAD_CA_A	CA_1, 9b'000000000
	LOAD_CA	CA_3, CA_2
	MOV_ARRAY	R1, A [CA_2 + 0]
	LOOP	1, count_T	
		MOV_ARRAY	R0, G [CA_1 + 0]
		MOV_ARRAY	R2, C [CA_3 + 0]
		MULT	R0, R1	
		ADD	R2, R0	
		MOV_ARRAY	C [CA_3 + 0], R2
		INC_DEC	CA_1, 0
		INC_DEC	CA_3, 0
	END_LOOP		1		
	INC_DEC	CA_2, 0		
END_LOOP	0				
LOAD_CA_A	CA_1, 9b'000000000
LOOP	0, pow_A + r + 1		
	OUT	C [CA_1 + 0]		
	INC_DEC	CA_1, 0		
END_LOOP	0				
